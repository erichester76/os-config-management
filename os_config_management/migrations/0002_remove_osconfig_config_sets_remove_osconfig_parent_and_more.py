# Generated by Django 5.1.4 on 2025-03-15 23:34

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0122_charfield_null_choices'),
        ('os_config_management', '0001_initial'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='osconfig',
            name='config_sets',
        ),
        migrations.RemoveField(
            model_name='osconfig',
            name='parent',
        ),
        migrations.RemoveField(
            model_name='osconfig',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='configitem',
            name='required',
        ),
        migrations.AddField(
            model_name='configitem',
            name='default_value',
            field=models.JSONField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name='configitem',
            name='type',
            field=models.CharField(max_length=50),
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('values', models.JSONField(blank=True, default=dict)),
                ('not_overridable', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
                ('status', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('config_items', models.ManyToManyField(blank=True, to='os_config_management.configitem')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationInclusion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('order', models.IntegerField()),
                ('included_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='os_config_management.configuration')),
                ('parent_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inclusions', to='os_config_management.configuration')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='configuration',
            name='included_configurations',
            field=models.ManyToManyField(blank=True, through='os_config_management.ConfigurationInclusion', to='os_config_management.configuration'),
        ),
        migrations.DeleteModel(
            name='ConfigSet',
        ),
        migrations.DeleteModel(
            name='OSConfig',
        ),
    ]