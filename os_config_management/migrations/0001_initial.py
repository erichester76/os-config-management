# Generated by Django 5.1.4 on 2025-03-10 00:29

import django.db.models.deletion
import taggit.managers
import utilities.json
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0122_charfield_null_choices'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(default='string', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('required', models.BooleanField(default=False)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Config Item',
                'verbose_name_plural': 'Config Items',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ConfigSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('values', models.JSONField(blank=True, default=dict)),
                ('config_items', models.ManyToManyField(related_name='config_sets', to='os_config_management.configitem')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'Config Set',
                'verbose_name_plural': 'Config Sets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OSConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('hierarchy_type', models.CharField(default='os', max_length=50)),
                ('is_machine_specific', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('state', models.CharField(default='active', max_length=50)),
                ('config_sets', models.ManyToManyField(blank=True, related_name='os_configs', to='os_config_management.configset')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='os_config_management.osconfig')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'verbose_name': 'OS Configuration',
                'verbose_name_plural': 'OS Configurations',
                'ordering': ['name'],
            },
        ),
    ]